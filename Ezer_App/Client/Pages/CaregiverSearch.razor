@page "/caregiversearch"
@inject IUserService UserService
@inject ILocalStorageService localStorage

<PageTitle>Find an Ezer!</PageTitle>

<div style="margin-left: 250px;">
  <h3 class="text-center display-6 text-ezer">Search for Caregivers</h3>
  <p class="text-center display-9 text-ezer">Input a search radius below</p>
  <div class="col-5 m-auto">
    <div class="input-group mb-4">
      <input type="text" class="form-control" @bind-value="SearchState" placeholder="Enter a state name here:"
        aria-label="Name" aria-describedby="basic-addon2">
      <div class="input-group-append">
        <button class="btn btn-primary search-button" type="button" onclick="@SetFilter" style="color: rgb(220, 243, 243);"><span class="oi oi-magnifying-glass" ></span> Search</button>
      </div>
    </div>
  </div>
  <hr class="col-11 m-auto mb-3">
  <div class="col-11 m-auto">
    <div class="search-result-container text-center m-auto d-flex flex-wrap justify-content-start @showDiv">
      @{
        if (FilteredUsers.Count() > 0)
        {
          @foreach (User? user in FilteredUsers)
          {
            <CaregiverCard Caregiver=user />
          }
        }
        else
        {
          <h3 class="m-auto">No caregivers match your search criteria.</h3>
        }
      }
    </div>
  </div>
</div>

<br>
<br>
<br>
<br>
<br>
<br>

@code {

  public string? SearchState { get; set; }
  User Caregiver { get; set; } = new User();
  public string showDiv { get;set; } = "";
  List<User> FilteredUsers { get; set; } = new List<User>();

  private void SetFilter()
  {
    showDiv = "show-div";
    @* FilteredUsers = UserService.Users.Where(u => u.AddressState == SearchState && u.IsDoula | u.IsMidwife).ToList(); *@
    FilteredUsers = UserService.Users.Where(u => u.AddressState == SearchState).ToList();
  }

  protected override async Task OnInitializedAsync()
  {
    await UserService.GetUsers();
  }

}